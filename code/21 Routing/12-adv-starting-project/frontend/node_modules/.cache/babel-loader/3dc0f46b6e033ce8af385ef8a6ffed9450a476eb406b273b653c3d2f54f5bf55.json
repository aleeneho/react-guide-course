{"ast":null,"code":"var _jsxFileName = \"/home/jianingho/code/aleeneho/react-guide-course/code/21 Routing/12-adv-starting-project/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\n// import { useEffect, useState } from 'react';\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const {\n    events\n  } = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n      style: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Await, {\n      resolve: events,\n      children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n        events: loadedEvents\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n\n  // const events = data.events;\n\n  // return (\n  //   <>\n  //     <EventsList events={events} />\n  //   </>\n  // );\n}\n_s(EventsPage, \"22Av1LduzrZxSsk8kXUUCix36lQ=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not load events.' };\n    // throw { message: 'Could not fetch events.' };\n    // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), { status: 500 });\n    throw json({\n      message: 'Could not fetch events.'\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    // const res = new Response('any data', {status: 201});\n    // return resData;\n    return response;\n  }\n}\nexport function loader() {\n  return defer({\n    events: loadEvents()\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","json","defer","Await","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","events","Suspense","fallback","style","fileName","_jsxFileName","lineNumber","columnNumber","children","resolve","loadedEvents","_c","loadEvents","response","fetch","ok","message","status","loader","$RefreshReg$"],"sources":["/home/jianingho/code/aleeneho/react-guide-course/code/21 Routing/12-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\nimport { useLoaderData, json, defer, Await } from \"react-router-dom\";\n\nimport EventsList from '../components/EventsList';\n\nfunction EventsPage() {\n  const {events} = useLoaderData();\n\n  return (\n    <Suspense fallback={<p style></p>}>\n      <Await resolve={events}>\n        {(loadedEvents) => <EventsList events={loadedEvents} />}\n      </Await>\n    </Suspense>\n  );\n\n  // if (data.isError) {\n  //   return <p>{data.message}</p>;\n  // }\n\n  // const events = data.events;\n\n  // return (\n  //   <>\n  //     <EventsList events={events} />\n  //   </>\n  // );\n}\n\nexport default EventsPage;\n\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n\n    if (!response.ok) {\n      // return { isError: true, message: 'Could not load events.' };\n      // throw { message: 'Could not fetch events.' };\n      // throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), { status: 500 });\n      throw json({ message: 'Could not fetch events.' }, { status: 500 });\n    } else {\n    // const resData = await response.json();\n    // return resData.events;\n    // const res = new Response('any data', {status: 201});\n    // return resData;\n    return response;\n  }\n}\n\nexport function loader() {\n  return defer({\n    events: loadEvents(),\n  })\n}\n"],"mappings":";;AAAA;AACA,SAASA,aAAa,EAAEC,IAAI,EAAEC,KAAK,EAAEC,KAAK,QAAQ,kBAAkB;AAEpE,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAACC;EAAM,CAAC,GAAGT,aAAa,CAAC,CAAC;EAEhC,oBACEM,OAAA,CAACI,QAAQ;IAACC,QAAQ,eAAEL,OAAA;MAAGM,KAAK;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAE;IAAAC,QAAA,eAChCX,OAAA,CAACH,KAAK;MAACe,OAAO,EAAET,MAAO;MAAAQ,QAAA,EACnBE,YAAY,iBAAKb,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEU;MAAa;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;;EAGb;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;AACF;AAACR,EAAA,CAtBQD,UAAU;EAAA,QACAP,aAAa;AAAA;AAAAoB,EAAA,GADvBb,UAAU;AAwBnB,eAAeA,UAAU;AAEzB,eAAec,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE1D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA;IACA;IACA,MAAMvB,IAAI,CAAC;MAAEwB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EACrE,CAAC,MAAM;IACP;IACA;IACA;IACA;IACA,OAAOJ,QAAQ;EACjB;AACF;AAEA,OAAO,SAASK,MAAMA,CAAA,EAAG;EACvB,OAAOzB,KAAK,CAAC;IACXO,MAAM,EAAEY,UAAU,CAAC;EACrB,CAAC,CAAC;AACJ;AAAC,IAAAD,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}